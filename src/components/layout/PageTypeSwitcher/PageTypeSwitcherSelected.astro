---
import type { ICard, SVGProps } from '@/types/SVGTypes'
interface Props {
  card: ICard;
  svgs: Record<string, any>;
}

const { card, svgs } = Astro.props;

const {
    title, lightStyle, darkStyle, imageSrc,
  } = card;

const isForTheme = typeof imageSrc === 'object';
const svgCodeLight = await (isForTheme ? svgs[imageSrc.lightThemeSrc] : svgs[imageSrc])();
const svgCodeDark = await (isForTheme ? svgs[imageSrc.darkThemeSrc] : svgs[imageSrc])();

const getParamsString = (props?: SVGProps) => {
  if (!props) return '';
  return Object.entries(props).reduce((acc, [key, value]) => {
    if (value === undefined) return acc;
    return `${acc} ${key}="${value}"`;
  }, '');
}

const lightStylesSVGString = svgCodeLight.replace(/<svg/, `<svg ${getParamsString(lightStyle)}"`);
const darkStylesSVGString = svgCodeDark.replace(/<svg/, `<svg ${getParamsString(darkStyle)}`);
---
<div class={"type-selector__wrap"}>
  <div class={"type-selector__icon"}>
    <div class={"img_light"}>
      <Fragment set:html={lightStylesSVGString} />
    </div>
    <div class={"img_dark"}>
      <Fragment set:html={darkStylesSVGString} />
    </div>
  </div>
  <div>
    <h3 class={"type-selector__header"}>{title}</h3>
  </div>
  <div class="type-selector__chevron">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down">
      <polyline points="6 9 12 15 18 9"></polyline></svg>
  </div>
</div>
<style>
  html[class~=dark] .img_light {
    visibility: hidden;
  }

  .img_light {
    visibility: visible;
    position: absolute;
  }

  html[class~=dark] .img_dark {
    visibility: visible;
  }

  .img_dark {
    visibility: hidden;
    position: absolute;
  }

  html[class~=dark] .type-selector__wrap {
    border-color: rgb(64 64 64);
    background-color: #111111;
  }

  html[class~=dark] .type-selector__wrap:hover {
    background-color: rgb(23 23 23);
    border-color: rgb(64 64 64);
  }

  html[class~=dark] .type-selector__header {
    color: rgb(243, 244, 246);
  }

  .type-selector__wrap {
    width: 260px;
    transition-duration: .2s;
    transition-property: all;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    background-color: rgba(240, 241, 242, 0.27);
    border: 1px solid rgba(33, 39, 46, 0.12);
    border-radius: 4px;
    overflow: hidden;
    justify-content: flex-start;
    align-items: center;
    display: flex;
    height: 48px;
  }

  .type-selector__wrap:hover {
    border-color: rgb(209 213 219);
    background-color: rgb(248 250 252);
  }

  .type-selector__icon {
    display: flex;
    align-items: center;
    border-radius: 5px;
    width: 48px;
    height: 48px;
    justify-content: center;
    text-align: center;
  }

  .type-selector__header {
    margin: 0;
    font-weight: 700;
    font-size: 14px;
    color: rgb(33, 39, 46);
  }

  .type-selector__chevron {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: auto;
    color: rgb(126, 134, 140);
  }
</style>
<style is:global>
  .type-selector__icon svg, .type-selector__icon img {
    width: 20px;
    height: 20px;
  }
</style>