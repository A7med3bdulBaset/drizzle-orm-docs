---
import type { ICard, SVGProps } from '@/types/SVGTypes'
interface Props {
  card: ICard;
  svgs: Record<string, any>;
}

const { card, svgs } = Astro.props;

const {
    title, lightStyle, darkStyle, imageSrc
  } = card;

const isForTheme = typeof imageSrc === 'object';
const svgCodeLight = await (isForTheme ? svgs[imageSrc.lightThemeSrc] : svgs[imageSrc])();
const svgCodeDark = await (isForTheme ? svgs[imageSrc.darkThemeSrc] : svgs[imageSrc])();

const getParamsString = (props?: SVGProps) => {
  if (!props) return '';
  return Object.entries(props).reduce((acc, [key, value]) => {
    if (value === undefined) return acc;
    return `${acc} ${key}="${value}"`;
  }, '');
}

const lightStylesSVGString = svgCodeLight.replace(/<svg/, `<svg ${getParamsString(lightStyle)}"`);
const darkStylesSVGString = svgCodeDark.replace(/<svg/, `<svg ${getParamsString(darkStyle)}`);
---
  <div class={"dialect-selector__wrap"}>
    <div class={"dialect-selector__icon"}>
      <div class={"img_light"}>
        <Fragment set:html={lightStylesSVGString} />
      </div>
      <div class={"img_dark"}>
        <Fragment set:html={darkStylesSVGString} />
      </div>
    </div>
    <div>
      <h3 class={"dialect-selector__header"}>{title}</h3>
    </div>
  </div>
<style>
  html[class~=dark] .img_light {
    visibility: hidden;
  }

  .img_dark, .img_light {
    width: 20px;
    height: 20px;
  }

  .img_light {
    visibility: visible;
    position: absolute;
  }

  html[class~=dark] .img_dark {
    visibility: visible;
  }

  .img_dark {
    visibility: hidden;
    position: absolute;
  }

  html[class~=dark] .dialect-selector__header {
    color: rgb(243, 244, 246);
  }

  .dialect-selector__wrap {
    transition-duration: .2s;
    transition-property: all;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    overflow: hidden;
    justify-content: flex-start;
    align-items: center;
    display: flex;
    height: 100%;
  }

  .dialect-selector__icon {
    display: flex;
    align-items: center;
    width: 48px;
    height: 48px;
    min-width: 48px;
    justify-content: center;
    text-align: center;
  }

  .dialect-selector__header {
    margin: 0;
    font-weight: 700;
    font-size: 14px;
    color: rgb(33, 39, 46);
  }

</style>