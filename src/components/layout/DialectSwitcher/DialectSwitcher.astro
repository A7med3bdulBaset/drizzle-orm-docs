---
import { dialects } from "@/data/dialects";
import DialectSwitcherSelected from './DialectSwitcherSelected.astro';
import DialectSwitcherItem from './DialectSwitcherItem.astro';

interface Props {
  slug: string;
}


const svgs = await import.meta.glob<Record<string, any>>('/public/svg/*.svg', { as: 'raw' });

const { slug = '' } = Astro.props;

const current = Object.keys(dialects).find((key) => {
  const item = dialects[key].href.split('/').at(-1);
  const slugDialect = slug.split('/').at(-1);
  return item === slugDialect;
});
const currentItem = dialects[current as keyof typeof dialects];

const getLinkWithDialect = (dialect: string) => {
  const slugDialect = slug.split('/').at(-1);
  const slugWithoutDialect = slug.replace(`/${slugDialect}`, '');
  return `/${slugWithoutDialect}${dialect}`;
};
---
<div class="dialect-selector">
  <div data-dialect-selector-btn class="dialect-selector__button" data-dialect={current}>
    <DialectSwitcherSelected card={currentItem}  svgs={svgs}/>
  </div>
  <div id="dialect-selector" class="dialect-selector__items">
    {Object.keys(dialects).map((name) => 
    (<a class="dialect-link" href={getLinkWithDialect(dialects[name].href)}>
      <DialectSwitcherItem card={dialects[name]}  svgs={svgs}/>
      </a>)
    )}
  </div>
</div>

<style>
  html[class~=dark] .dialect-link {
    border-color: rgb(64 64 64) !important;
    background-color: #111111;
  }

  html[class~=dark] .dialect-link:hover {
    background-color: rgb(23 23 23);
  }

  .dialect-link:hover {
    background: #f8fafc;
  }

  .dialect-link {
    color: inherit;
    text-decoration: none;
    border-radius: 2px;
  }

  .dialect-selector {
    position: relative;
    user-select: none;
  }

  .dialect-selector__button {
    position: relative;
    cursor: pointer;
    float: right;
  }

  html[class~=dark] .dialect-selector__items {
    background-color: #111111;
    border: 1px solid #333333;
    box-shadow: rgba(255, 255, 255, 0.05) 0px 0px 16px;
  }

  .dialect-selector__items {
    position: absolute;
    display: none;
    flex-direction: column;
    top: 100%;
    right: 0;
    margin-top: 8px;
    z-index: 100;
    padding: 12px;
    background: #fff;
    border-radius: 4px;
    width: 320px;
    border: 1px solid #e4e4e5;
    box-shadow: rgba(17, 17, 26, 0.1) 0px 0px 16px;
  }

  @media screen and (max-width: 768px) {
    .dialect-selector__items {
      right: 0;
      left: 0;
    }
  }
</style>
<script>import updateDialectLinks from "@/utils/updateDialectLinks";

  const typeSelectorBtn = document.querySelector('[data-dialect-selector-btn]') as HTMLDivElement;
  const typeSelectorItems = document.getElementById('dialect-selector') as HTMLDivElement;

  
  const dialect = typeSelectorBtn?.dataset?.dialect as string;
  if(dialect) {
    localStorage.setItem('dialect', dialect);
    updateDialectLinks();
  }

  if(typeSelectorBtn) {
    typeSelectorBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      typeSelectorItems.classList.toggle("d-flex");
    });
  }

  window.addEventListener('click', (e) => {
    const clickedElement = e.target as HTMLElement;
    if (!clickedElement.matches('.dialect-selector__button')) {
      if (typeSelectorItems && typeSelectorItems.classList.contains('d-flex')) {
        typeSelectorItems.classList.remove('d-flex');
      }
    }
  })
</script>