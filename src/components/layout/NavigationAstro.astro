---
import ThemeToggle from './ThemeToggle.astro';
import Logo from './Logo.astro';
import NavItem from './NavItem.astro';
import SearchBar from './SearchBar.astro';
import Socials from './Socials.astro';
import MobileNav from './MobileNav.astro';
---
<div id="nav_container" class="nav_container">
  <div class="nav_container_blur" />
    <div class="nav_content_wrap">
      <a class="nav_logo" href={'/'}>
        <div>
          <Logo />
        </div>
      </a>
      <div class="nav_desktop">
        <NavItem
          value="Pricing"
          href="/#pricing"
          activeKeywords={["/#pricing"]}
        />
        <NavItem
          value="Studio"
          href="/drizzle-studio/overview"
          activeKeywords={["/drizzle-studio"]}
        />
        <NavItem
          value="Documentation"
          href="/docs/overview"
          activeKeywords={["/kit-docs", "/docs"]}
        />
        <SearchBar />
        <Socials />
        <ThemeToggle />
      </div>
      <div class="nav_mobile">
        <div>
          <ThemeToggle />
        </div>
        <div class="burger" data-nav-burger-btn>
          <svg
            fill="none"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke="currentColor"
            >
            <g>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16"
              />
            </g>
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 12h16"
            />
            <g>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 18h16"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="nav_mobile">
  <MobileNav />
</div>

<style>
  .nav_container {
    position: sticky;
    top: 0;
    z-index: 20;
    width: 100%;
  }

  html[class~=dark] .nav_container_blur {
  background-color: hsla(0,0%,7%,.8)!important;
  box-shadow: 0 0 transparent,0 0 transparent,0 -1px 0 hsla(0,0%,100%,.1) inset;
}

.nav_container_blur {
  backdrop-filter: blur(12px);
  pointer-events: none;
  position: absolute;
  z-index: -1;
  height: 100%;
  width: 100%;
  background-color: hsla(0,0%,100%,.85);
  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0.02) 0px 2px 4px 0px, rgba(0, 0, 0, 0.06) 0px 1px 0px 0px;
}

.nav_content_wrap {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  height: 64px;
  max-width: 1440px;
  align-items: center;
  justify-content: flex-end;
  gap: 8px;
  padding-left: max(env(safe-area-inset-left),24px);
  padding-right: max(env(safe-area-inset-right),24px);
}

.nav_logo {
  outline-offset: 2px;
  outline: 2px solid transparent;
  border-radius: 4px;
  display: flex;
  align-items: center;
  margin-right: auto;
}

.nav_logo:hover {
  opacity: .75;
}

.nav_desktop {
  display: contents;
}

.nav_mobile {
  display: none;
}

.nav_container_open .burger svg g {
  transition: transform .2s cubic-bezier(.25,1,.5,1) .2s;
  transform-origin: 50%;
}

  .nav_container_open .burger svg g:first-of-type {
    transform: rotate(45deg);
  }

  .nav_container_open .burger svg g:first-of-type path {
    transform: translateY(6px);
    opacity: 1;
  }

  .nav_container_open .burger svg path {
    opacity: 0;
    transition: transform .2s cubic-bezier(.25,1,.5,1),opacity 0s .2s;
  }

  .nav_container_open .burger svg g:nth-of-type(2) {
    transform: rotate(-45deg);
  }
  .nav_container_open .burger svg g:nth-of-type(2) path {
    opacity: 1;
    transform: translateY(-6px);
  }

.burger {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  margin-right: -8px;
  border-radius: 4px;
  cursor: pointer;
}

.burger:active {
  background-color: rgba(156, 163, 175, 0.2);
}

.burger g {
  transform-origin: 50%;
  transition: transform .2s cubic-bezier(.25,1,.5,1);
}

.burger path {
  opacity: 1;
  transition: transform .2s cubic-bezier(.25,1,.5,1) .2s,opacity .2s .2s;
}

@media screen and (max-width: 768px) {
  .nav_container {
    top: 0px;
  }
  body[class~=banner-shown] .nav_container {
    top: 40px;
  }
  .nav_desktop {
    display: none;
  }
  .nav_mobile {
    display: contents;
  }
}
</style>
<script>
  const burgerBtn = document.querySelector('[data-nav-burger-btn]');
  const navContainer = document.getElementById('nav_container');
  const navMobile = document.getElementById('nav_mobile');
  if(burgerBtn && navContainer && navMobile) {
    burgerBtn.addEventListener('click', () => {
      navContainer.classList.toggle('nav_container_open');
      navMobile.classList.toggle('invisible');
      document.body.style.overflow = navContainer.classList.contains('nav_container_open') ? 'hidden' : 'auto';
    })
  }
</script>
<script is:inline>
  const getColorPreference = () => {
      let preference = localStorage.getItem('theme');

      if (!preference) {
          preference = window.matchMedia('(prefers-color-scheme: dark)').matches
          ? 'dark'
          : 'light';
      }
      return preference;
  }
  
  const setPreference = (themeName) => {
      localStorage.setItem('theme', themeName);
      document.firstElementChild.classList.toggle('dark', themeName === 'dark');
      document.firstElementChild.classList.toggle('light', themeName !== 'dark');
      document.firstElementChild.style = themeName === 'dark' ? 'color-scheme: dark' : 'color-scheme: light';
  }
  
  const togglePreference = () => {
      setPreference(getColorPreference() === 'dark' ? 'light' : 'dark');
  }
  
  (() => {
      const theme = getColorPreference();
      setPreference(theme);
  })();
  </script>