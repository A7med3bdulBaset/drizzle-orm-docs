<template id="banner-template">
  <div id="banner" class="banner">
    <div class="banner__content">
      <a href="https://driz.li/payload2.0" target="_blank" rel="nofollow noreferrer">ðŸŽ‰ Payload is now powered by Drizzle! Read more â†’</a>
    </div>
    <button data-close-banner class="banner__button" type="button" aria-label="Dismiss banner" >
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor" class="nx-mx-auto nx-h-4 nx-w-4">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
      </svg>
  </button>
  </div>
  </div>
</template>

<style is:inline>
  .banner {
    position: relative;
    top: 0;
    z-index: 20;
    display: flex;
    height: 40px;
    align-items: center;
    background-color: rgba(23,23,23,1);
    padding-right: .5rem;
    padding-left: 2.5rem;
    background-image: linear-gradient(1deg,#383838,#212121);
    color: rgba(255,255,255,1);
  }
  .banner__content {
    width: 100%;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: .875rem;
    font-weight: 500;
  }
  .banner__button {
    cursor: pointer;
    outline-offset: 2px;
    outline: 2px solid transparent;
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
    height: 2rem;
    width: 2rem;
    opacity: .8;
  }
  .banner__button svg {
    margin-left: auto;
    margin-right: auto;
    height: 1rem;
    width: 1rem;
  }

  @media screen and (max-width:768px) {
    .banner {
      position: sticky;
    }
  }
</style>
<script>
  const removeBanner = () => {
    const banner = document.getElementById('banner');
    const bannerTemplate = document.getElementById('banner-template') as HTMLTemplateElement;
    if(banner && bannerTemplate) {
      banner.remove();
      document.body.classList.remove('banner-shown');
      localStorage.setItem('banner-hidden', 'true');
    }
  }


  const addBannerToBody = () => {
    const bannerTemplate = document.getElementById('banner-template') as HTMLTemplateElement;
    if(!bannerTemplate) return;
    document.body.insertBefore(bannerTemplate.content.cloneNode(true), document.body.firstChild);
    document.body.classList.add('banner-shown');
    const banner = document.querySelector('[data-close-banner]');
    if(banner) {
      banner.addEventListener('click', removeBanner);
    }
  }

  const isBunnerHidden = localStorage.getItem('banner-hidden');
  if (!isBunnerHidden) {
    // addBannerToBody();
  } else {
    // removeBanner();
  }
</script>