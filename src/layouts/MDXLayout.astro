---
import EndOfContent from '@components/layout/EndOfContent.astro';
import GlobalStyles from '@components/layout/GlobalStyles.astro';
import MDXStyles from '@components/layout/MDXStyles.astro';
import type { IHeading } from '../types/astro';
import Banner from '@components/layout/Banner.astro';
import SidebarWrap from '@components/layout/SidebarWrap.astro';
import Footer from '@components/layout/Footer.astro';
import getContentTree from '@/utils/getContentTree';
import Navbar from '@components/layout/Navbar/Navbar.astro';
import RightAside from '@components/layout/RightAside.astro';

interface Props {
  title: string;
  headings: IHeading[];
}
const { headings } = Astro.props;
const { slug } = Astro.params;
const { tree, filteredHeadings, title } = await getContentTree({
  headings,
  slug
});
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <title>Drizzle ORM - {title}</title>
    <meta name="description" content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind.">
		<meta property="og:title" content="Drizzle ORM - next gen TypeScript ORM">
		<meta property="og:description" content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind.">
		<link rel="preconnect" href="https://MXZNUT59HV-dsn.algolia.net" crossorigin />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@docsearch/css@3" />
    <script is:inline src="https://cdn.jsdelivr.net/npm/@docsearch/js@3"></script>
    <script is:inline type="module" src="https://unpkg.com/@inkeep/widgets-embed@0.2.238/dist/embed.js"></script>
    <script>
      const getColorPreference = () => {
        let preference = localStorage.getItem("theme");
        if (preference === "system") {
          return preference;
        }

        if (!preference) {
          preference = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }
        return preference;
      };
			const theme = getColorPreference();
			document.documentElement.setAttribute("data-theme", theme);
      document.documentElement.classList.toggle("dark", theme === "dark");
  		document.documentElement.classList.toggle("light", theme !== "dark");
    </script>
  </head>
  <body class="banner-shown">
    <GlobalStyles />
    <MDXStyles />
    <Banner />
    <Navbar />
    <main class="documentation-container">
      <SidebarWrap filteredHeadings={filteredHeadings} tree={tree}/> 
      <div class="documentation-content scrollbar">
          <slot />
          <EndOfContent />
		      <Footer />
      </div>
      <RightAside />
    </main>
  </body>
<style is:global>
    .documentation-header {
      position: -webkit-sticky;
      position: sticky;
      top: 0;
      z-index: 20;
      width: 100%;
    }
    .navigation_nav_container_blur {
      -webkit-backdrop-filter: blur(12px);
      backdrop-filter: blur(12px);
      pointer-events: none;
      position: absolute;
      z-index: -1;
      height: 100%;
      width: 100%;
      background-color: hsla(0,0%,100%,.85);
      box-shadow: 0 0 0 0 transparent, 0 0 0 0 transparent, 0 2px 4px 0 rgba(0,0,0,.02), 0 1px 0 0 rgba(0,0,0,.06);
    }
    .navigation_nav_content_wrap {
      margin-left: auto;
      margin-right: auto;
      display: flex;
      height: 64px;
      max-width: 1440px;
      align-items: center;
      gap: 8px;
      padding-left: max(env(safe-area-inset-left),24px);
      padding-right: max(env(safe-area-inset-right),24px);
    }
    .documentation-container {
      max-width: 1440px;
      width: 100%;
      display: flex;
      margin: 0 auto;
    }

    body[class~=banner-shown] .documentation-container {
			max-height: calc(100vh - 104px);
		}

    .documentation-content {
      overflow: auto;
      padding-left: 3rem;
      padding-right: 3rem;
      padding-top: 1rem;
      max-width: 816px;
      width: 100%;
    }


    @media screen and (max-width: 768px) {
      .documentation-content {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
        padding-top: 1rem;
        width: 100%;
      }
    }
  </style>
</html>
<script>
    const hash = window.location.hash;
    if (hash !== "") {
      const targetElement = document.querySelector(hash);
      if (targetElement) {
        targetElement.scrollIntoView();
      }
    }
</script>