---
import Banner from "@components/layout/Banner.astro";
import GlobalStyles from "@components/layout/GlobalStyles.astro";
import NavigationAstro from "@components/layout/NavigationAstro.astro";
import Footer from "@components/layout/Footer.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="robots" content="index,follow" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link
      rel="preconnect"
      href="https://MXZNUT59HV-dsn.algolia.net"
      crossorigin
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta
      name="description"
      content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind."
    />
    <meta property="og:title" content="Drizzle ORM - next gen TypeScript ORM" />
    <meta
      property="og:description"
      content="Drizzle ORM is a lightweight and performant TypeScript ORM with developer experience in mind."
    />
    <script
      type="module"
      src="https://unpkg.com/@inkeep/widgets-embed@0.2.237/dist/embed.js"
      defer></script>
    <script is:inline src="https://cdn.jsdelivr.net/npm/@docsearch/js@3"
    ></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@docsearch/css@3"
    />
    <link
      rel="preconnect"
      href="https://MXZNUT59HV-dsn.algolia.net"
      crossorigin
    />
    <script is:inline>
      const getColorPreference = () => {
        let preference = localStorage.getItem("theme");
        if (preference === "system") {
          return preference;
        }

        if (!preference) {
          preference = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        }
        return preference;
      };
			const theme = getColorPreference();
			document.documentElement.setAttribute("data-theme", theme);
			document.documentElement.classList.toggle("dark", theme === "dark");
  		document.documentElement.classList.toggle("light", theme !== "dark");
    </script>
  </head>
  <body class="banner-shown">
    <GlobalStyles />
    <Banner />
    <NavigationAstro />
    <main class="landing-wrap scrollbar">
      <div class="landing-content">
        <slot />
      </div>
      <div class="bottom-margin"></div>
      <Footer />
    </main>
  </body>
  <style is:inline>
    body[class~="banner-shown"] .landing-wrap {
      max-height: calc(100vh - 104px);
    }
    .landing-wrap {
      max-height: calc(100vh - 64px);
      width: 100%;
      overflow-x: hidden;
      overflow-wrap: break-word;
      padding-left: max(env(safe-area-inset-left), 1.5rem);
      padding-right: max(env(safe-area-inset-right), 1.5rem);
      color: #334155;
    }

    .landing-content {
      max-width: 1024px;
      margin: 0 auto;
    }

    .bottom-margin {
      margin-bottom: 4rem;
    }
  </style>
</html>
